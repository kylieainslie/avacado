seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-(1:2)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,])
sum(test[366,-(1:2)])
sum(params$N)
head(test)
sum(test[1,-c("N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9")])
names(test)
sum(test[1,-c(1,2,138:146)])
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[366,-c(1,2,138:146)])
sum(params$N)
(1/3)/3
test_state <- c(rep(0.1111111,9))
params <- list(N = n_vec,  # population size
# rates
beta = 0.0004,
beta1 = 0.14,
sigma = 0.5,
epsilon = 0.00,
omega = 0, #wane_8months,
gamma = i2r,
h = i2h,
i1 = test_state, #h2ic,
d = test_state, #h2d,
r = test_state, #h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
# simulation start time
calendar_start_date = as.Date("2020-01-01"),
# contact matrices for different levels of NPIs
c_start = april_2017$mean,
c_lockdown = april_2020$mean,
c_open = april_2017$mean,
keep_cm_fixed = FALSE,
# IC admission thresholds
thresh_o = 1,
thresh_l = 40,
# vaccination parameters
alpha = c(rep(0,9)),
t_vac_start = NULL,
t_vac_end = NULL,
eta = 1, # - ve_inf$mean_ve,
eta_hosp = 1, # - ve_hosp$mean_ve,
eta_trans = 1 # - ve_trans$mean_ve
)
rk45 <- rkMethod("rk45dp7")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
source("/rivm/s/ainsliek/code/avacado/R/age_struct_seir_simple.R")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,-c(1,2,138:146)])
sum(test[366,-c(1,2,138:146)])
sum(params$N)
test_s <- test %>%
select(starts_with("S"))
head(test_s)
test_n <- test %>%
select(starts_with("N"))
head(test_n)
test_n <- test %>%
select(starts_with("IC"))
head(test_n)
test_n <- test %>%
select(starts_with("H"))
test_n
?rkMethod
rk45 <- rkMethod("rk45f")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,-c(1,2,138:146)])
sum(test[366,-c(1,2,138:146)])
sum(params$N)
source("/rivm/s/ainsliek/code/avacado/R/age_struct_seir_simple.R")
init <- c(
t = 0,
S = n_vec - inf_seed_vec,
Sv = empty_state,
E = empty_state,
Ev = empty_state,
I = inf_seed_vec,
Iv = empty_state,
H = empty_state,
Hv = empty_state,
IC = empty_state,
ICv = empty_state,
H_IC = empty_state,
H_ICv = empty_state,
D = empty_state,
R = empty_state,
Rv = empty_state#,
#N = n_vec
# R_1w = empty_state,
# Rv_1w = empty_state,
# R_2w = empty_state,
# Rv_2w = empty_state,
# R_3w = empty_state,
# Rv_3w = empty_state
)
params <- list(N = n_vec,  # population size
# rates
beta = 0.0004,
beta1 = 0.14,
sigma = 0.5,
epsilon = 0.00,
omega = 0, #wane_8months,
gamma = i2r,
h = i2h,
i1 = h2ic,
d = h2d,
r = h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
# simulation start time
calendar_start_date = as.Date("2020-01-01"),
# contact matrices for different levels of NPIs
c_start = april_2017$mean,
c_lockdown = april_2020$mean,
c_open = april_2017$mean,
keep_cm_fixed = FALSE,
# IC admission thresholds
thresh_o = 1,
thresh_l = 40,
# vaccination parameters
alpha = c(rep(0,9)),
t_vac_start = NULL,
t_vac_end = NULL,
eta = 1, # - ve_inf$mean_ve,
eta_hosp = 1, # - ve_hosp$mean_ve,
eta_trans = 1 # - ve_trans$mean_ve
)
rk45 <- rkMethod("rk45f")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
source("/rivm/s/ainsliek/code/avacado/R/age_struct_seir_simple.R")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,-c(1,2,138:146)])
sum(test[366,-c(1,2,138:146)])
sum(params$N)
test_s <- test %>%
select(starts_with("S"))
head(test_s)
plot(1:nrow(test_s), rowSums(test_s), type = "l")
test_n <- test %>%
select(starts_with("IC"))
head(test_n)
plot(1:nrow(test_ic), rowSums(test_ic), type = "l")
test_i <- test %>%
select(starts_with("I"))
head(test_n)
test_i <- test %>%
select(starts_with("I"))
head(test_n)
plot(1:nrow(test_i), rowSums(test_i), type = "l")
params <- list(N = n_vec,  # population size
# rates
beta = 0.0004,
beta1 = 0.14,
sigma = 0.5,
epsilon = 0.00,
omega = wane_8months,
gamma = i2r,
h = i2h,
i1 = h2ic,
d = h2d,
r = h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
# simulation start time
calendar_start_date = as.Date("2020-01-01"),
# contact matrices for different levels of NPIs
c_start = april_2017$mean,
c_lockdown = april_2020$mean,
c_open = april_2017$mean,
keep_cm_fixed = FALSE,
# IC admission thresholds
thresh_o = 1,
thresh_l = 40,
# vaccination parameters
alpha = c(rep(0,9)),
t_vac_start = NULL,
t_vac_end = NULL,
eta = 1, # - ve_inf$mean_ve,
eta_hosp = 1, # - ve_hosp$mean_ve,
eta_trans = 1 # - ve_trans$mean_ve
)
rk45 <- rkMethod("rk45f")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,-c(1,2,138:146)])
sum(test[366,-c(1,2,138:146)])
sum(params$N)
test_s <- test %>%
select(starts_with("S"))
head(test_s)
plot(1:nrow(test_s), rowSums(test_s), type = "l")
test_i <- test %>%
select(starts_with("I"))
head(test_n)
plot(1:nrow(test_i), rowSums(test_i), type = "l")
params <- list(N = n_vec,  # population size
# rates
beta = 0.0004,
beta1 = 0.14,
sigma = 0.5,
epsilon = 0.00,
omega = wane_8months,
gamma = i2r,
h = i2h,
i1 = h2ic,
d = h2d,
r = h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
# simulation start time
calendar_start_date = as.Date("2020-01-01"),
# contact matrices for different levels of NPIs
c_start = april_2017$mean,
c_lockdown = april_2017$mean,
c_open = april_2017$mean,
keep_cm_fixed = FALSE,
# IC admission thresholds
thresh_o = 1,
thresh_l = 40,
# vaccination parameters
alpha = c(rep(0,9)),
t_vac_start = NULL,
t_vac_end = NULL,
eta = 1, # - ve_inf$mean_ve,
eta_hosp = 1, # - ve_hosp$mean_ve,
eta_trans = 1 # - ve_trans$mean_ve
)
rk45 <- rkMethod("rk45f")
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,-c(1,2,138:146)])
sum(test[366,-c(1,2,138:146)])
sum(params$N)
test_i <- test %>%
select(starts_with("I"))
head(test_n)
plot(1:nrow(test_i), rowSums(test_i), type = "l")
ve_hosp
# ve estimates ------------------------------------------------------
ve <- read_excel("inst/extdata/inputs/ve_estimates/ve_dat.xlsx", sheet = "wildtype") %>%
group_by(dose, age_group, outcome) %>%
summarise(mean_ve = mean(ve))
ve_inf <- ve %>%
filter(outcome == "infection",
dose == "d2")
ve_hosp <- ve %>%
filter(outcome == "hospitalisation",
dose == "d2")
ve_trans <- ve %>%
filter(outcome == "transmission",
dose == "d2")
ve_hosp
source("/rivm/s/ainsliek/code/avacado/R/age_struct_seir_simple.R")
# specify initial model parameters ---------------------------------
# parameters must be in a named list
params <- list(N = n_vec,  # population size
# rates
beta = 0.0004,
beta1 = 0.14,
sigma = 0.5,
epsilon = 0.00,
omega = wane_8months,
gamma = i2r,
gamma_v = iv2rv,
h = i2h,
h_v = iv2hv,
i1 = h2ic,
d = h2d,
r = h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
# simulation start time
calendar_start_date = as.Date("2020-01-01"),
# contact matrices for different levels of NPIs
c_start = april_2017$mean,
c_lockdown = april_2020$mean,
c_open = april_2017$mean,
keep_cm_fixed = FALSE,
# IC admission thresholds
thresh_o = 1,
thresh_l = 40,
# vaccination parameters
alpha = c(rep(0,9)),
t_vac_start = NULL,
t_vac_end = NULL,
eta = 1, # - ve_inf$mean_ve,
#eta_hosp = 1, # - ve_hosp$mean_ve,
eta_trans = 1 # - ve_trans$mean_ve
)
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
time_in_iv <- ((1-(ve_hosp$mean_ve*p_infection2admission)) * 2) + ((ve_hosp$mean_ve*p_infection2admission) * time_symptom2admission)
iv2rv    <- (1-(ve_hosp$mean_ve*p_infection2admission)) / time_in_iv
iv2hv    <- (ve_hosp$mean_ve*p_infection2admission) / time_in_iv
# specify initial model parameters ---------------------------------
# parameters must be in a named list
params <- list(N = n_vec,  # population size
# rates
beta = 0.0004,
beta1 = 0.14,
sigma = 0.5,
epsilon = 0.00,
omega = wane_8months,
gamma = i2r,
gamma_v = iv2rv,
h = i2h,
h_v = iv2hv,
i1 = h2ic,
d = h2d,
r = h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
# simulation start time
calendar_start_date = as.Date("2020-01-01"),
# contact matrices for different levels of NPIs
c_start = april_2017$mean,
c_lockdown = april_2020$mean,
c_open = april_2017$mean,
keep_cm_fixed = FALSE,
# IC admission thresholds
thresh_o = 1,
thresh_l = 40,
# vaccination parameters
alpha = c(rep(0,9)),
t_vac_start = NULL,
t_vac_end = NULL,
eta = 1, # - ve_inf$mean_ve,
#eta_hosp = 1, # - ve_hosp$mean_ve,
eta_trans = 1 # - ve_trans$mean_ve
)
seir_out <- ode(init, times, age_struct_seir_simple, params, method = rk45)
test <- as.data.frame(seir_out)
# output error message if sum of all compartments is not equal to the total population size
if(!isTRUE(all.equal(sum(test[dim(test)[1],-c(1,2,138:146)]),sum(params$N)))){
stop("Error: sum of compartments is not equal to population size")
}
sum(test[1,-c(1,2,138:146)])
sum(test[366,-c(1,2,138:146)])
sum(params$N)
test_i <- test %>%
select(starts_with("I"))
head(test_n)
head(test_i)
plot(1:nrow(test_i), rowSums(test_i), type = "l")
n_vec
april_2017$mean
round(april_2017$mean,3)
round(april_2017$mean,5)
contact_matrix <- matrix(c(5e-05, 0.00003, 0.00004, 0.00003, 0.00002, 0.00001, 0.00001, 0.00001, 0.00002,
3e-05, 0.00046, 0.00019, 0.00008, 0.00009, 0.00006, 0.00005, 0.00004, 0.00006,
4e-05, 0.00021, 0.00066, 0.00022, 0.00017, 0.00014, 0.00011, 0.00009, 0.00027,
4e-05, 0.00009, 0.00021, 0.00022, 0.00013, 0.00009, 0.00008, 0.00007, 0.00019,
3e-05, 0.00010, 0.00017, 0.00014, 0.00018, 0.00010, 0.00009, 0.00008, 0.00019,
2e-05, 0.00008, 0.00016, 0.00010, 0.00011, 0.00015, 0.00013, 0.00011, 0.00030,
2e-05, 0.00005, 0.00011, 0.00008, 0.00008, 0.00011, 0.00029, 0.00026, 0.00052,
1e-05, 0.00003, 0.00006, 0.00005, 0.00005, 0.00007, 0.00019, 0.00060, 0.00108,
1e-05, 0.00002, 0.00010, 0.00007, 0.00007, 0.00010, 0.00020, 0.00057, 0.00227
), nrow = 9)
contact_matrix
i2r
i2h
round(i2r, 3)
round(i2h, 3)
round(i2h, 4)
round(h2ic, 4)
round(h2ic, 3)
round(h2d, 3)
round(h2r, 3)
round(ic2hic, 3)
round(ic2d, 3)
round(hic2d, 3)
round(hic2r, 3)
df_out <- as.data.frame(seir_out)
df_out
head(seir_out)
class(seir_out)
# Plot ---------------------------------------------------------------
plot(df_out %>% select(starts_with("I")) %>% rowSums() ~ times, type = "l", ylim = c(0, sum(params$N)))
# Plot ---------------------------------------------------------------
plot(df_out %>% select(starts_with("S")) %>% rowSums() ~ times, type = "l", ylim = c(0, sum(params$N)))
head(df_out)
?pivot_longer
# Plot ---------------------------------------------------------------
# convert output to long format
df_out <- as.data.frame(seir_out) %>%
select(-t) %>%
pivot_longer(!times,
names_to = c("state", "age_group"),
names_sep = "[0-9]+",
values_to = "value")
df_out <- as.data.frame(seir_out) %>%
select(-t)
head(df_out)
# Plot ---------------------------------------------------------------
# convert output to long format
df_out <- as.data.frame(seir_out) %>%
select(-t) %>%
pivot_longer(!time,
names_to = c("state", "age_group"),
names_sep = "[0-9]+",
values_to = "value")
head(df_out)
# Plot ---------------------------------------------------------------
# convert output to long format
df_out <- as.data.frame(seir_out) %>%
select(-t) %>%
pivot_longer(!time,
names_to = c("state", "age_group"),
names_sep = "(?<=[A-Za-z])(?=[0-9])",
values_to = "value")
df_out
# sum over age groups
df_sum <- df_out %>%
group_by(time, state) %>%
summarise(sum = sum(value))
df_sum
# plot
ggplot(data = df_sum, aes(x = time, y = sum, group = state)) %>%
geom_line()
# plot
ggplot(data = df_sum, aes(x = time, y = sum, group = state)) +
geom_line()
# parameters must be in a named list
params <- list(N = n_vec,
beta = 0.001,
beta1 = 0.14,
sigma = 0.5,
gamma = i2r,
h = i2h,
i1 = h2ic,
d = h2d,
r = h2r,
i2 = ic2hic,
d_ic = ic2d,
d_hic = hic2d,
r_ic = hic2r,
epsilon = 0.00,
omega = 0.0038,
contact_mat = contact_matrix,
calendar_start_date = as.Date("2020-01-01")
)
# --------------------------------------------------------------------
# Run model ----------------------------------------------------------
times <- seq(0,365, by = 1)
seir_out <- ode(init, times, age_struct_seir_ode_test, params)
source("/rivm/s/ainsliek/code/age_struct_seir_ode_exam.R")
source("/rivm/s/ainsliek/code/age_struct_seir_ode_exam.R")
class(init)
mode(init)
class(params)
mode(params)
class(times)
mode(times)
params
seir_out <- ode(init, times, age_struct_seir_ode_test, params)
class(params$contact_mat)
mode(params$contact_mat)
class(empty_state)
mode(empty_state)
source("/rivm/s/ainsliek/code/age_struct_seir_ode_exam.R")
# plot
p <- ggplot(data = df_sum, aes(x = time, y = sum, color = state)) +
geom_line()
p
# plot
p <- ggplot(data = df_sum, aes(x = time, y = sum, color = state)) +
geom_line() +
theme_bw()
p
